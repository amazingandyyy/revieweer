{"version":3,"sources":["../../src/services/itemLookUpStream.js"],"names":["itemLookUpStream","uri","Promise","resolve","reject","search","productId","split","then","$","load","res","data","result","item","find","imageURL","attr","title","link","sellStepOne","sellStepTwo","priceElm","whole","html","fact","price","Number","seller"],"mappings":";;;;;QAGgBA,gB,GAAAA,gB;;AAHhB;;;;AACA;;;;;;AAEO,SAASA,gBAAT,CAA0BC,GAA1B,EAA8B;AACnC,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,YAAG,CAACH,GAAJ,EAAS,OAAOG,OAAO,qBAAP,CAAP;AACT,YAAGH,IAAII,MAAJ,CAAW,KAAX,IAAoB,CAAvB,EAA0B,OAAOD,OAAO,qBAAP,CAAP;AAC1B,YAAIE,YAAY,OAAOL,IAAIM,KAAJ,CAAU,KAAV,EAAiB,CAAjB,EAAoBA,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAvB;AACA;AACA,0EAAiDD,SAAjD,EACCE,IADD,CACM,eAAM;AACR,gBAAIC,IAAI,kBAAQC,IAAR,CAAaC,IAAIC,IAAjB,CAAR;AACA,gBAAIC,SAAS,EAAb;AACA,gBAAIC,OAAOL,EAAE,qBAAF,EAAyBM,IAAzB,oBAA+CT,SAA/C,QAAX;AACAO,mBAAOG,QAAP,GAAkBP,EAAEK,IAAF,EAAQC,IAAR,CAAa,mCAAb,EAAkDA,IAAlD,CAAuD,iBAAvD,EAA0EE,IAA1E,CAA+E,KAA/E,CAAlB;AACAJ,mBAAOK,KAAP,GAAeT,EAAEK,IAAF,EAAQC,IAAR,CAAa,mCAAb,EAAkDA,IAAlD,CAAuD,iBAAvD,EAA0EE,IAA1E,CAA+E,KAA/E,CAAf;AACAJ,mBAAOM,IAAP,GAAcV,EAAEK,IAAF,EAAQC,IAAR,CAAa,mCAAb,EAAkDA,IAAlD,CAAuD,gBAAvD,EAAyEE,IAAzE,CAA8E,MAA9E,CAAd;AACA,gBAAIG,cAAcX,EAAEK,IAAF,EAAQC,IAAR,CAAa,oCAAb,EAAmDA,IAAnD,CAAwD,uBAAxD,EAAiF,GAAjF,CAAlB;AACA,gBAAIM,cAAcZ,EAAEW,WAAF,EAAeL,IAAf,CAAoB,qCAApB,EAA2D,GAA3D,CAAlB;AACA,gBAAIO,WAAWb,EAAEK,IAAF,EAAQC,IAAR,CAAa,0BAAb,CAAf;AACA,gBAAIQ,QAAQd,EAAEa,QAAF,EAAYP,IAAZ,CAAiB,iBAAjB,EAAoCS,IAApC,EAAZ;AACA,gBAAIC,OAAOhB,EAAEa,QAAF,EAAYP,IAAZ,CAAiB,sBAAjB,EAAyCS,IAAzC,EAAX;AACAX,mBAAOa,KAAP,GAAeC,OAAOJ,KAAP,IAAgB,OAAOI,OAAOF,IAAP,CAAtC;AACAZ,mBAAOe,MAAP,GAAgBnB,EAAEY,WAAF,EAAeG,IAAf,EAAhB;AACAX,mBAAOP,SAAP,GAAmBA,SAAnB;AACA;AACA;AACA;AACA;AACA,gBAAG,CAACO,OAAOP,SAAR,IAAqB,CAACO,OAAOG,QAAhC,EAA0C,OAAOZ,OAAO,uCAAP,CAAP;AAC1CD,oBAAQU,MAAR;AACC,SAtBL;AAuBC,KA5BI,CAAP;AA6BD","file":"itemLookUpStream.js","sourcesContent":["import cheerio from 'cheerio';\nimport axios from 'axios';\n\nexport function itemLookUpStream(uri){\n  return new Promise((resolve, reject) => {\n    if(!uri) return reject('No Uri Is Provided.')\n    if(uri.search('/B0') < 0) return reject('No Product Id Found');\n    let productId = 'B0' + uri.split('/B0')[1].split('/')[0];\n    // let momentStarting = new Date();\n    axios(`https://www.amazon.com/s/field-keywords=${productId}`)\n    .then(res=> {\n        let $ = cheerio.load(res.data);\n        let result = {};\n        let item = $('#s-results-list-atf').find(`li[data-asin=\"${productId}\"]`);\n        result.imageURL = $(item).find('.a-fixed-left-grid-col.a-col-left').find('.s-access-image').attr('src');\n        result.title = $(item).find('.a-fixed-left-grid-col.a-col-left').find('.s-access-image').attr('alt');\n        result.link = $(item).find('.a-fixed-left-grid-col.a-col-left').find('.a-link-normal').attr('href');\n        let sellStepOne = $(item).find('.a-fixed-left-grid-col.a-col-right').find('.a-row.a-spacing-none')['1'];\n        let sellStepTwo = $(sellStepOne).find('span.a-size-small.a-color-secondary')['1']\n        let priceElm = $(item).find('.sx-price.sx-price-large');\n        let whole = $(priceElm).find('.sx-price-whole').html()\n        let fact = $(priceElm).find('.sx-price-fractional').html()\n        result.price = Number(whole) + 0.01 * Number(fact);\n        result.seller = $(sellStepTwo).html();\n        result.productId = productId;\n        // const momentEnding = new Date()\n        // const period = momentEnding.getTime() - momentStarting.getTime() + ' ms';\n        // console.log('period: ', period)\n        // console.log(result);\n        if(!result.productId || !result.imageURL) return reject('400:Item Information is not complete.');\n        resolve(result);\n        })\n    })\n}\n"]}