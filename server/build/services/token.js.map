{"version":3,"sources":["../../src/services/token.js"],"names":["token","generateToken","user","createdAt","Math","round","Date","now","expiredAt","payload","sub","id","iat","exp","encode","jwt_secret","generateTokenWithEmail","email","jwt_secret_email","verifyToken","cb","decode","Error","verifyEmailToken"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;AAEO,IAAMA,wBAAS;AAClBC,mBAAe,uBAACC,IAAD,EAAU;AACrB,YAAMC,YAAYC,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,CAAlB;AACA,YAAMC,YAAYJ,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAb,GAAoB,IAAI,EAAJ,GAAS,EAAT,GAAc,EAA7C,CAAlB,CAFqB,CAE+C;AACpE,YAAME,UAAU;AACZC,iBAAKR,KAAKS,EADE;AAEZC,iBAAKT,SAFO;AAGZU,iBAAKL;AAHO,SAAhB;AAKA,eAAO,oBAAIM,MAAJ,CAAWL,OAAX,EAAoB,iBAAOM,UAA3B,CAAP;AACH,KAViB;AAWlBC,4BAAwB,gCAACC,KAAD,EAAW;AAC/B,YAAMd,YAAYC,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,CAAlB;AACA,YAAMC,YAAYJ,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAb,GAAoB,IAAI,EAAJ,GAAS,EAAT,GAAc,CAA7C,CAAlB,CAF+B,CAEoC;AACnE,YAAME,UAAU;AACZC,iBAAKO,KADO;AAEZL,iBAAKT,SAFO;AAGZU,iBAAKL;AAHO,SAAhB;AAKA,eAAO,oBAAIM,MAAJ,CAAWL,OAAX,EAAoB,iBAAOS,gBAA3B,CAAP;AACH,KApBiB;AAqBlBC,iBAAa,qBAACnB,KAAD,EAAQoB,EAAR,EAAe;AACxB,YAAMC,SAAS,oBAAIA,MAAJ,CAAWrB,KAAX,EAAkB,iBAAOe,UAAzB,CAAf;AACA,YAAI,CAACM,MAAL,EAAa,OAAOD,GAAG,IAAIE,KAAJ,CAAU,wBAAV,CAAH,CAAP;AACbF,WAAG,IAAH,EAASC,MAAT;AACH,KAzBiB;AA0BlBE,sBAAkB,0BAACvB,KAAD,EAAQoB,EAAR,EAAe;AAC7B,YAAMC,SAAS,oBAAIA,MAAJ,CAAWrB,KAAX,EAAkB,iBAAOkB,gBAAzB,CAAf;AACA,YAAI,CAACG,MAAL,EAAa,OAAOD,GAAG,IAAIE,KAAJ,CAAU,wBAAV,CAAH,CAAP;AACbF,WAAG,IAAH,EAASC,OAAOX,GAAhB;AACH;AA9BiB,CAAf","file":"token.js","sourcesContent":["import jwt from 'jwt-simple';\n\nimport config from '../config';\n\nexport const token =  {\n    generateToken: (user) => {\n        const createdAt = Math.round(Date.now() / 1000);\n        const expiredAt = Math.round(Date.now() / 1000 + 7 * 60 * 60 * 24); // in 7 days\n        const payload = {\n            sub: user.id,\n            iat: createdAt,\n            exp: expiredAt\n        }\n        return jwt.encode(payload, config.jwt_secret);\n    },\n    generateTokenWithEmail: (email) => {\n        const createdAt = Math.round(Date.now() / 1000);\n        const expiredAt = Math.round(Date.now() / 1000 + 1 * 60 * 60 * 2); // in 2 hours\n        const payload = {\n            sub: email,\n            iat: createdAt,\n            exp: expiredAt\n        }\n        return jwt.encode(payload, config.jwt_secret_email);\n    },\n    verifyToken: (token, cb) => {\n        const decode = jwt.decode(token, config.jwt_secret)\n        if (!decode) return cb(new Error('Token is not verified.'));\n        cb(null, decode);\n    },\n    verifyEmailToken: (token, cb) => {\n        const decode = jwt.decode(token, config.jwt_secret_email)\n        if (!decode) return cb(new Error('Token is not verified.'));\n        cb(null, decode.sub);\n    },\n}"]}